// ? VARIABLE
$ost-default-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
	Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;

$ost-colors: (
	"white": #fff,
	"black": #000,
	"dark": #1d1d1d,
	"light": #f4f4f4,
	"gray": #898989,
	"red": #ff3535,
	"orange": #ff8f2d,
	"gold": #ffc619,
	"yellow": #ffff35,
	"lime": #89f714,
	"grass": #06d006,
	"teal": #14b8a6,
	"cyan": #15cfef,
	"sky": #0e91e9,
	"blue": #1d60cb,
	"indigo": #7519ff,
	"violet": #8c28ff,
	"purple": #c629ff,
	"magenta": #e72fff,
	"pink": #ff56ab,
	"rose": #ff1943,
);

// ? MIXIN LAND
@mixin font($size, $line-height) {
	font-size: $size;
	line-height: $line-height;
}

@mixin hover-util($class, $property, $value) {
	.#{$class} {
		#{$property}: #{$value};
	}
	.hover\@#{$class}:hover {
		#{$property}: #{$value};
	}
}

:root {
	--ost-default-family: #{$ost-default-family};
}

// ? BASE STYLE
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	text-decoration: none;
	color: initial;
	background-color: initial;
	font: inherit;
	vertical-align: baseline;
	font-family: var(--ost-default-family);
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
	display: block;
}
body {
	line-height: 1;
}
ol,
ul {
	list-style: none;
}
blockquote,
q {
	quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
	content: "";
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

[hidden] {
	display: none !important;
}

[italic] {
	font-style: italic;
}

// ! UTILITIES

// ? ANIMATION
@keyframes rotate {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}
@include hover-util("anim-rotate", "animation", "rotate 2s infinite linear");

@keyframes scale-up {
	0% {
		transform: scale(auto);
	}
	50% {
		transform: scale(1.8);
	}
	100% {
		transform: scale(auto);
	}
}
@include hover-util(
	"anim-scale-up",
	"animation",
	"scale-up 1.6s infinite cubic-bezier(0.48, 0.14, 0.44, 0.76)"
);

@keyframes swing {
	0% {
		transform: rotate(0deg);
	}
	25% {
		transform: rotate(30deg);
	}
	50% {
		transform: rotate(-10deg);
	}
	75% {
		transform: rotate(25deg);
	}
	100% {
		transform: rotate(0deg);
	}
}
@include hover-util(
	"anim-swing",
	"animation",
	"swing 1s infinite cubic-bezier(0.54, 0.15, 0.37, 0.87)"
);

@keyframes scale-down {
	0% {
		transform: scale(auto);
	}
	50% {
		transform: scale(0.5);
	}
	100% {
		transform: scale(auto);
	}
}
@include hover-util(
	"anim-scale-down",
	"animation",
	"scale-down 1.8s infinite cubic-bezier(0.48, 0.14, 0.44, 0.76)"
);

@keyframes jumping {
	0% {
		transform: translateY(0px);
	}
	50% {
		transform: translateY(40px);
	}
	100% {
		transform: translateY(0px);
	}
}
@include hover-util(
	"anim-jumping",
	"animation",
	"jumping 1.4s infinite cubic-bezier(0.68, 0.34, 0.27, 0.93)"
);

@keyframes pulse {
	0% {
		opacity: 1;
	}
	50% {
		opacity: 0.5;
	}
	100% {
		opacity: 1;
	}
}
@include hover-util(
	"anim-pulse",
	"animation",
	"pulse 1.2s infinite cubic-bezier(0.52, 0, 0.55, 0.99)"
);

@keyframes slide-in {
	0% {
		transform: translateX(-100%);
		opacity: 0;
	}
	100% {
		transform: translateX(0);
		opacity: 1;
	}
}
@include hover-util("anim-slide-in", "animation", "slide-in 0.5s ease-out");

@keyframes slide-out {
	0% {
		transform: translateX(0);
		opacity: 1;
	}
	100% {
		transform: translateX(100%);
		opacity: 0;
	}
}
@include hover-util("anim-slide-out", "animation", "slide-out 0.5s ease-in");

// ? CONTAINER
.container {
	width: 100%;
	margin-right: auto;
	margin-left: auto;
	padding-right: 15px;
	padding-left: 15px;

	@media (min-width: 576px) {
		max-width: 540px;
	}
	@media (min-width: 768px) {
		max-width: 720px;
	}
	@media (min-width: 992px) {
		max-width: 960px;
	}
	@media (min-width: 1200px) {
		max-width: 1140px;
	}
	@media (min-width: 1400px) {
		max-width: 1320px;
	}
}

// ? PADDING & MARGIN
@for $i from -100 through 100 {
	.p-#{$i} {
		padding: #{calc($i * 0.25)}rem;
	}
	.pt-#{$i} {
		padding-top: #{calc($i * 0.25)}rem;
	}
	.pl-#{$i} {
		padding-left: #{calc($i * 0.25)}rem;
	}
	.pr-#{$i} {
		padding-right: #{calc($i * 0.25)}rem;
	}
	.pb-#{$i} {
		padding-bottom: #{calc($i * 0.25)}rem;
	}
	.py-#{$i} {
		padding-top: #{calc($i * 0.25)}rem;
		padding-bottom: #{calc($i * 0.25)}rem;
	}
	.px-#{$i} {
		padding-right: #{calc($i * 0.25)}rem;
		padding-left: #{calc($i * 0.25)}rem;
	}

	.m-#{$i} {
		margin: #{calc($i * 0.25)}rem;
	}
	.mt-#{$i} {
		margin-top: #{calc($i * 0.25)}rem;
	}
	.ml-#{$i} {
		margin-left: #{calc($i * 0.25)}rem;
	}
	.mr-#{$i} {
		margin-right: #{calc($i * 0.25)}rem;
	}
	.mb-#{$i} {
		margin-bottom: #{calc($i * 0.25)}rem;
	}
	.my-#{$i} {
		margin-top: #{calc($i * 0.25)}rem;
		margin-bottom: #{calc($i * 0.25)}rem;
	}
	.mx-#{$i} {
		margin-right: #{calc($i * 0.25)}rem;
		margin-left: #{calc($i * 0.25)}rem;
	}

	.hover\@p-#{$i}:hover {
		padding: #{calc($i * 0.25)}rem;
	}
	.hover\@pt-#{$i}:hover {
		padding-top: #{calc($i * 0.25)}rem;
	}
	.hover\@pl-#{$i}:hover {
		padding-left: #{calc($i * 0.25)}rem;
	}
	.hover\@pr-#{$i}:hover {
		padding-right: #{calc($i * 0.25)}rem;
	}
	.hover\@pb-#{$i}:hover {
		padding-bottom: #{calc($i * 0.25)}rem;
	}
	.hover\@py-#{$i}:hover {
		padding-top: #{calc($i * 0.25)}rem;
		padding-bottom: #{calc($i * 0.25)}rem;
	}
	.hover\@px-#{$i}:hover {
		padding-right: #{calc($i * 0.25)}rem;
		padding-left: #{calc($i * 0.25)}rem;
	}

	.hover\@m-#{$i}:hover {
		margin: #{calc($i * 0.25)}rem;
	}
	.hover\@mt-#{$i}:hover {
		margin-top: #{calc($i * 0.25)}rem;
	}
	.hover\@ml-#{$i}:hover {
		margin-left: #{calc($i * 0.25)}rem;
	}
	.hover\@mr-#{$i}:hover {
		margin-right: #{calc($i * 0.25)}rem;
	}
	.hover\@mb-#{$i}:hover {
		margin-bottom: #{calc($i * 0.25)}rem;
	}
	.hover\@my-#{$i}:hover {
		margin-top: #{calc($i * 0.25)}rem;
		margin-bottom: #{calc($i * 0.25)}rem;
	}
	.hover\@mx-#{$i}:hover {
		margin-right: #{calc($i * 0.25)}rem;
		margin-left: #{calc($i * 0.25)}rem;
	}
}

.p-auto {
	padding: auto;
}
.pt-auto {
	padding-top: auto;
}
.pl-auto {
	padding-left: auto;
}
.pr-auto {
	padding-right: auto;
}
.pb-auto {
	padding-bottom: auto;
}
.py-auto {
	padding-top: auto;
	padding-bottom: auto;
}
.px-auto {
	padding-right: auto;
	padding-left: auto;
}
.m-auto {
	margin: auto;
}
.mt-auto {
	margin-top: auto;
}
.ml-auto {
	margin-left: auto;
}
.mr-auto {
	margin-right: auto;
}
.mb-auto {
	margin-bottom: auto;
}
.my-auto {
	margin-top: auto;
	margin-bottom: auto;
}
.mx-auto {
	margin-right: auto;
	margin-left: auto;
}

.hover\@p-auto:hover {
	padding: auto;
}
.hover\@pt-auto:hover {
	padding-top: auto;
}
.hover\@pl-auto:hover {
	padding-left: auto;
}
.hover\@pr-auto:hover {
	padding-right: auto;
}
.hover\@pb-auto:hover {
	padding-bottom: auto;
}
.hover\@py-auto:hover {
	padding-top: auto;
	padding-bottom: auto;
}
.hover\@px-auto:hover {
	padding-right: auto;
	padding-left: auto;
}
.hover\@m-auto:hover {
	margin: auto;
}
.hover\@mt-auto:hover {
	margin-top: auto;
}
.hover\@ml-auto:hover {
	margin-left: auto;
}
.hover\@mr-auto:hover {
	margin-right: auto;
}
.hover\@mb-auto:hover {
	margin-bottom: auto;
}
.hover\@my-auto:hover {
	margin-top: auto;
	margin-bottom: auto;
}
.hover\@mx-auto:hover {
	margin-right: auto;
	margin-left: auto;
}

// ? BACKGROUND COLOR
@each $color-name, $color-value in $ost-colors {
	.bg-#{$color-name} {
		background-color: #{$color-value};
	}
	.hover\@bg-#{$color-name}:hover {
		background-color: #{$color-value};
	}
}

// ? FONT COLOR
@each $color-name, $color-value in $ost-colors {
	.font-#{$color-name} {
		color: #{$color-value};
	}
	.hover\@font-#{$color-name}:hover {
		color: #{$color-value};
	}
}

// ? FONT WEIGHT
@each $weight,
	$weight-value
		in (
			"thin": 100,
			"semilight": 200,
			"light": 300,
			"normal": 400,
			"medium": 500,
			"semibold": 600,
			"bold": 700,
			"extrabold": 800,
			"heavy": 900
		)
{
	.weight-#{$weight} {
		font-weight: #{$weight-value};
	}
	.hover\@weight-#{$weight}:hover {
		font-weight: #{$weight-value};
	}
}

// ? FONT SIZE
@each $name,
	$values
		in (
			"xs": (
				8px,
				1,
			),
			"sm": (
				12px,
				1.5,
			),
			"base": (
				18px,
				1.6,
			),
			"lg": (
				24px,
				1.8,
			),
			"xl": (
				30px,
				1.9,
			),
			"2xl": (
				36px,
				2,
			),
			"3xl": (
				48px,
				2.2,
			),
			"4xl": (
				60px,
				2.4,
			),
			"5xl": (
				80px,
				2.6,
			),
			"6xl": (
				100px,
				2.8,
			)
		)
{
	.font-#{$name} {
		@include font(nth($values, 1), nth($values, 2));
	}
	.hover\@font-#{$name}:hover {
		@include font(nth($values, 1), nth($values, 2));
	}
}

// ? FONT STYLE
.italic {
	font-style: italic;
}
.hover\@italic:hover {
	font-style: italic;
}

// ? BORDER RADIUS
@each $radius,
	$radius-value
		in (
			"xs": 2px,
			"sm": 4px,
			"base": 6px,
			"lg": 8px,
			"xl": 10px,
			"2xl": 12px,
			"3xl": 14px,
			"4xl": 16px,
			"5xl": 18px,
			"6xl": 20px,
			"7xl": 22px,
			"8xl": 24px,
			"pill": 999px,
			"full": 100%
		)
{
	.radius-#{$radius} {
		border-radius: #{$radius-value};
	}
	.radius-tr-#{$radius} {
		border-top-right-radius: #{$radius-value};
	}
	.radius-es-#{$radius} {
		border-end-start-radius: #{$radius-value};
	}
	.radius-se-#{$radius} {
		border-start-end-radius: #{$radius-value};
	}
	.radius-bl-#{$radius} {
		border-bottom-left-radius: #{$radius-value};
	}
	.radius-ss-#{$radius} {
		border-start-start-radius: #{$radius-value};
	}
	.radius-br-#{$radius} {
		border-bottom-right-radius: #{$radius-value};
	}
	.radius-ee-#{$radius} {
		border-end-end-radius: #{$radius-value};
	}
	.radius-tl-#{$radius} {
		border-top-left-radius: #{$radius-value};
	}

	.hover\@radius-#{$radius}:hover {
		border-radius: #{$radius-value};
	}
	.hover\@radius-tr-#{$radius}:hover {
		border-top-right-radius: #{$radius-value};
	}
	.hover\@radius-es-#{$radius}:hover {
		border-end-start-radius: #{$radius-value};
	}
	.hover\@radius-se-#{$radius}:hover {
		border-start-end-radius: #{$radius-value};
	}
	.hover\@radius-bl-#{$radius}:hover {
		border-bottom-left-radius: #{$radius-value};
	}
	.hover\@radius-ss-#{$radius}:hover {
		border-start-start-radius: #{$radius-value};
	}
	.hover\@radius-br-#{$radius}:hover {
		border-bottom-right-radius: #{$radius-value};
	}
	.hover\@radius-ee-#{$radius}:hover {
		border-end-end-radius: #{$radius-value};
	}
	.hover\@radius-tl-#{$radius}:hover {
		border-top-left-radius: #{$radius-value};
	}
}

// ? FONT FAMILY
@each $family,
	$family-value
		in (
			"serif": serif,
			"sans": sans-serif,
			"monospace": monospace,
			"arial": arial,
			"roman": "'Times New Roman'"
		)
{
	.family-#{$family} {
		font-family: #{$family-value};
	}
	.hover\@family-#{$family}:hover {
		font-family: #{$family-value};
	}
}

// ? Z INDEX
@for $i from -25 through 25 {
	.z-#{$i} {
		z-index: $i;
	}
	.hover\@z-#{$i}:hover {
		z-index: $i;
	}
}

// ? OVERFLOW
@each $overflow in (hidden, auto, scroll, visible) {
	.overflow-#{$overflow} {
		overflow: #{$overflow};
	}
	.overflow-x-#{$overflow} {
		overflow-x: #{$overflow};
	}
	.overflow-y-#{$overflow} {
		overflow-y: #{$overflow};
	}
	.hover\@overflow-#{$overflow}:hover {
		overflow: #{$overflow};
	}
	.hover\@overflow-x-#{$overflow}:hover {
		overflow-x: #{$overflow};
	}
	.hover\@overflow-y-#{$overflow}:hover {
		overflow-y: #{$overflow};
	}
}

// ? CURSOR
@each $cursor,
	$cursor-value
		in (
			"pointer": pointer,
			"base": default,
			"progress": progress,
			"auto": auto,
			"copy": copy,
			"cross": crosshair,
			"move": move,
			"help": help,
			"zoom-in": "zoom in",
			"zoom-out": "zoom out"
		)
{
	.cursor-#{$cursor} {
		cursor: #{$cursor};
	}
	.hover\@cursor-#{$cursor}:hover {
		cursor: #{$cursor};
	}
}

// ? WIDTH & HEIGHT
@for $i from -100 through 100 {
	.w-#{$i} {
		width: #{calc($i * 0.25)}rem;
	}
	.h-#{$i} {
		height: #{calc($i * 0.25)}rem;
	}
	.hover\@w-#{$i}:hover {
		width: #{calc($i * 0.25)}rem;
	}
	.hover\@h-#{$i}:hover {
		height: #{calc($i * 0.25)}rem;
	}
}

@each $width,
	$width-value
		in (
			"auto": auto,
			"view": 100vw,
			"max": max-content,
			"min": min-content,
			"fit": fit-content
		)
{
	.w-#{$width} {
		width: #{$width-value};
	}
	.hover\@w-#{$width}:hover {
		width: #{$width-value};
	}
}

@each $height,
	$height-value
		in (
			"auto": auto,
			"view": 100vh,
			"max": max-content,
			"min": min-content,
			"fit": fit-content
		)
{
	.h-#{$height} {
		height: #{$height-value};
	}
	.hover\@h-#{$height}:hover {
		height: #{$height-value};
	}
}

@for $i from 1 through 100 {
	.h-#{$i}\% {
		height: #{$i + "%"};
	}
	.hover\@h-#{$i}\%:hover {
		height: #{$i + "%"};
	}
}

@for $i from 1 through 100 {
	.w-#{$i}\% {
		width: #{$i + "%"};
	}
	.hover\@w-#{$i}\%:hover {
		width: #{$i + "%"};
	}
}

// ? OPACITY
@each $opacity
	in (
		100,
		95,
		90,
		85,
		80,
		75,
		70,
		65,
		60,
		55,
		50,
		45,
		40,
		35,
		30,
		25,
		20,
		15,
		10,
		5,
		0
	)
{
	.opacity-#{$opacity} {
		opacity: #{calc($opacity / 100)};
	}
	.hover\@opacity-#{$opacity}:hover {
		opacity: #{calc($opacity / 100)};
	}
}

// ? TEXT DECORATION
@each $decoration-value in ("underline", "overline", "line-through", "none") {
	.decor-#{$decoration-value} {
		text-decoration: #{$decoration-value};
	}
	.hover\@decor-#{$decoration-value}:hover {
		text-decoration: #{$decoration-value};
	}
}

// ? TEXT TRANSFORM
@each $transform-value in ("capitalize", "lowercase", "uppercase") {
	.transform-#{$transform-value} {
		text-transform: #{$transform-value};
	}
	.hover\@transform-#{$transform-value}:hover {
		text-transform: #{$transform-value};
	}
}

// ? DISPLAY
@each $display-value
	in (
		"flex",
		"grid",
		"block",
		"inline-block",
		"inline",
		"none",
		"inline-flex",
		"inline-grid"
	)
{
	.display-#{$display-value} {
		display: #{$display-value};
	}
	.hover\@display-#{$display-value}:hover {
		display: #{$display-value};
	}
}

// ? POSITION
@each $position-value in ("relative", "absolute", "static", "sticky", "fixed") {
	.pos-#{$position-value} {
		position: #{$position-value};
	}
	.hover\@pos-#{$position-value}:hover {
		position: #{$position-value};
	}
}

// ? FLOAT
@each $float,
	$float-value
		in (
			"right": "right",
			"left": "left",
			"none": "none",
			"end": "inline-end",
			"start": "inline-start"
		)
{
	.float-#{$float} {
		float: #{$float-value};
	}
	.hover\@float-#{$float}:hover {
		float: #{$float-value};
	}
}

// ? CLEAR
@each $clear in ("both", "right", "left", "none") {
	.clear-#{$clear} {
		clear: #{$clear};
	}
	.hover\@clear-#{$clear}:hover {
		clear: #{$clear};
	}
}

// ? ALIGN ITEMS
@each $items,
	$items-value
		in (
			"normal": "normal",
			"start": flex-start,
			"end": flex-end,
			"center": "center",
			"right": "right",
			"left": "left"
		)
{
	.items-#{$items} {
		align-items: #{$items-value};
	}
	.hover\@items-#{$items}:hover {
		align-items: #{$items-value};
	}
}

// ? ALIGN SELF
@each $self,
	$self-value
		in (
			"auto": auto,
			"start": flex-start,
			"end": flex-end,
			"center": center,
			"baseline": baseline,
			"stretch": stretch
		)
{
	.self-#{$self} {
		align-self: #{$self-value};
	}
	.hover\@self-#{$self}:hover {
		align-self: #{$self-value};
	}
}

// ? JUSTIFY CONTENT
@each $justify,
	$justify-value
		in (
			"center": center,
			"left": left,
			"right": right,
			"evenly": space-evenly,
			"around": space-around,
			"between": space-between
		)
{
	.justify-#{$justify} {
		justify-content: #{$justify-value};
	}
	.hover\@justify-#{$justify}:hover {
		justify-content: #{$justify-value};
	}
}

// ? TOP, BOTTOM, RIGHT, LEFT
@for $i from -100 through 100 {
	.top-#{$i} {
		top: #{calc($i * 0.25)}rem;
	}
	.bottom-#{$i} {
		bottom: #{calc($i * 0.25)}rem;
	}
	.right-#{$i} {
		right: #{calc($i * 0.25)}rem;
	}
	.left-#{$i} {
		left: #{calc($i * 0.25)}rem;
	}
	.hover\@top-#{$i}:hover {
		top: #{calc($i * 0.25)}rem;
	}
	.hover\@bottom-#{$i}:hover {
		bottom: #{calc($i * 0.25)}rem;
	}
	.hover\@right-#{$i}:hover {
		right: #{calc($i * 0.25)}rem;
	}
	.hover\@left-#{$i}:hover {
		left: #{calc($i * 0.25)}rem;
	}
}

.top-full {
	top: 100%;
}
.bottom-full {
	bottom: 100%;
}
.right-full {
	right: 100%;
}
.left-full {
	left: 100%;
}
.hover\@top-full:hover {
	top: 100%;
}
.hover\@bottom-full:hover {
	bottom: 100%;
}
.hover\@right-full:hover {
	right: 100%;
}
.hover\@left-full:hover {
	left: 100%;
}

// ? TEXT ALIGN
@each $align in ("center", "justify", "end", "left", "right", "start") {
	.text-#{$align} {
		text-align: #{$align};
	}
	.hover\@text-#{$align}:hover {
		text-align: #{$align};
	}
}

// ? SHADOW
@each $shadow,
	$shadow-value
		in (
			"xs": 0 2px 2px 0 #898989,
			"sm": 0 3px 3px -1px #898989,
			"base": 0 4px 4px -2px #898989,
			"lg": 0 5px 5px -3px #898989,
			"xl": 0 6.125px 6.125px -4px #898989
		)
{
	.shadow-#{$shadow} {
		box-shadow: #{$shadow-value};
	}
	.hover\@shadow-#{$shadow}:hover {
		box-shadow: #{$shadow-value};
	}
}

// ? ROTATE TRANSFORM
@for $i from -180 through 180 {
	.rotate-#{$i} {
		transform: rotate(#{$i}deg);
	}
	.hover\@rotate-#{$i}:hover {
		transform: rotate(#{$i}deg);
	}
}

// ? SCALE TRANSFORM
@for $i from 0 through 200 {
	.scale-#{$i} {
		transform: scale(#{calc($i/ 100)});
	}
	.hover\@scale-#{$i}:hover {
		transform: scale(#{calc($i/ 100)});
	}
}

// ? TRANSLATE TRANSFORM
@for $i from -100 through 100 {
	.translate-x-#{$i} {
		transform: translateX(#{$i}rem);
	}
	.translate-y-#{$i} {
		transform: translateY(#{$i}rem);
	}
	.hover\@translate-x-#{$i}:hover {
		transform: translateX(#{$i}rem);
	}
	.hover\@translate-y-#{$i}:hover {
		transform: translateY(#{$i}rem);
	}
}

// ? SKEW TRANSFORM
@for $i from -180 through 180 {
	.skew-x-#{$i} {
		transform: skewX(#{$i}deg);
	}
	.skew-y-#{$i} {
		transform: skewY(#{$i}deg);
	}
	.hover\@skew-x-#{$i}:hover {
		transform: skewX(#{$i}deg);
	}
	.hover\@skew-y-#{$i}:hover {
		transform: skewY(#{$i}deg);
	}
}

// ? FLEX DIRECTON
@each $direction in ("column", "column-reverse", "row", "row-reverse") {
	.flex-#{$direction} {
		flex-direction: #{$direction};
	}
	.hover\@flex-#{$direction}:hover {
		flex-direction: #{$direction};
	}
}

// ? FLEX WRAP
@each $wrap in ("nowrap", "wrap", "wrap-reverse") {
	.flex-#{$wrap} {
		flex-wrap: #{$wrap};
	}
	.hover\@flex-#{$wrap}:hover {
		flex-wrap: #{$wrap};
	}
}

// ? ORDER
@for $i from -25 through 25 {
	.order-#{$i} {
		order: #{$i};
	}
	.hover\@order-#{$i}:hover {
		order: #{$i};
	}
}

.order-last {
	order: 9999;
}
.order-first {
	order: -9999;
}
.hover\@order-last:hover {
	order: 9999;
}
.hover\@order-first:hover {
	order: -9999;
}

// ? GRID TEMPLATE COLUMNS
@for $i from 1 through 12 {
	.grid-cols-#{$i} {
		grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
	}
	.hover\@grid-cols-#{$i}:hover {
		grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
	}
}

// ? GRID TEMPLATE ROWS
@for $i from 1 through 12 {
	.grid-rows-#{$i} {
		grid-template-rows: repeat(#{$i}, minmax(0, 1fr));
	}
	.hover\@grid-rows-#{$i}:hover {
		grid-template-rows: repeat(#{$i}, minmax(0, 1fr));
	}
}

// ? GRID COLUMN SPAN
@for $i from 1 through 12 {
	.col-span-#{$i} {
		grid-column: span #{$i} / span #{$i};
	}
	.hover\@col-span-#{$i}:hover {
		grid-column: span #{$i} / span #{$i};
	}
}

// ? GRID ROW SPAN
@for $i from 1 through 12 {
	.row-span-#{$i} {
		grid-row: span #{$i} / span #{$i};
	}
	.hover\@row-span-#{$i}:hover {
		grid-row: span #{$i} / span #{$i};
	}
}

// ? GRID AUTO COLUMNS
@for $i from 1 through 12 {
	.auto-cols-#{$i} {
		grid-auto-columns: minmax(0, #{$i}fr);
	}
	.hover\@auto-cols-#{$i}:hover {
		grid-auto-columns: minmax(0, #{$i}fr);
	}
}

// ? GRID AUTO ROWS
@for $i from 1 through 12 {
	.auto-rows-#{$i} {
		grid-auto-rows: minmax(0, #{$i}fr);
	}
	.hover\@auto-rows-#{$i}:hover {
		grid-auto-rows: minmax(0, #{$i}fr);
	}
}

// ? GRID TEMPLATE AREAS
@each $area in ("header", "main", "sidebar", "footer") {
	.grid-area-#{$area} {
		grid-area: #{$area};
	}
	.hover\@grid-area-#{$area}:hover {
		grid-area: #{$area};
	}
}

// ? GRID AUTO FLOW
@each $flow in ("flow-row", "flow-col", "flow-row-dense", "flow-col-dense") {
	.grid-flow-#{$flow} {
		grid-auto-flow: #{$flow};
	}
	.hover\@grid-flow-#{$flow}:hover {
		grid-auto-flow: #{$flow};
	}
}

// ? GAP
@for $i from -100 through 100 {
	.gap-#{$i} {
		gap: #{calc($i * 0.25)}rem;
	}
	.hover\@gap-#{$i}:hover {
		gap: #{calc($i * 0.25)}rem;
	}
}

@for $i from -100 through 100 {
	.gap-x-#{$i} {
		column-gap: #{calc($i * 0.25)}rem;
	}
	.hover\@gap-x-#{$i}:hover {
		column-gap: #{calc($i * 0.25)}rem;
	}
}

@for $i from -100 through 100 {
	.gap-y-#{$i} {
		row-gap: #{calc($i * 0.25)}rem;
	}
	.hover\@gap-y-#{$i}:hover {
		row-gap: #{calc($i * 0.25)}rem;
	}
}

// ? ALIGN CONTENT
@each $content
	in (flex-start, flex-end, center, space-between, space-around, space-evenly)
{
	.align-content-#{$content} {
		align-content: #{$content};
	}
	.hover\@align-content-#{$content}:hover {
		align-content: #{$content};
	}
}

// ? TRANSITION
@each $transition,
	$transition-value
		in (
			"out": "ease-out",
			"in": "ease-in",
			"in-out": "ease-in-out",
			"ease": "ease"
		)
{
	.timing-#{$transition} {
		transition-timing-function: #{$transition-value};
	}
	.hover\@timing-#{$transition}:hover {
		transition-timing-function: #{$transition-value};
	}
}

@each $time
	in (
		5000,
		4000,
		3000,
		2000,
		1000,
		900,
		800,
		700,
		600,
		500,
		400,
		300,
		250,
		200,
		150,
		100,
		75,
		50,
		25,
		0
	)
{
	.duration-#{$time} {
		transition-duration: #{calc($time / 1000)}s;
	}
	.hover\@duration-#{$time}:hover {
		transition-duration: #{calc($time / 1000)}s;
	}
}

@each $time
	in (
		5000,
		4000,
		3000,
		2000,
		1000,
		900,
		800,
		700,
		600,
		500,
		400,
		300,
		250,
		200,
		150,
		100,
		75,
		50,
		25,
		0
	)
{
	.delay-#{$time} {
		transition-delay: #{calc($time / 1000)}s;
	}
	.hover\@delay-#{$time}:hover {
		transition-delay: #{calc($time / 1000)}s;
	}
}

@each $property in ("all") {
	.property-#{$property} {
		transition-property: #{$property};
	}
	.hover\@property-#{$property}:hover {
		transition-property: #{$property};
	}
}

// ? BORDER COLORS
@each $colors, $colors-value in $ost-colors {
	.border-#{$colors} {
		border-color: #{$colors-value};
	}
	.hover\@border-#{$colors}:hover {
		border-color: #{$colors-value};
	}
}

// ? BORDER WIDTH
@for $i from -100 through 100 {
	.border-#{$i} {
		border-width: #{calc($i * 0.0625)}rem;
	}
	.hover\@border-#{$i}:hover {
		border-width: #{calc($i * 0.0625)}rem;
	}
}

// ? BORDER STYLE
@each $style in (solid, dashed, dotted, double, hidden) {
	.border-#{$style} {
		border-style: #{$style};
	}
	.hover\@border-#{$style}:hover {
		border-style: #{$style};
	}
}

// ? VISIBILITY
@each $visibility in ("visible", "hidden") {
	.visibility-#{$visibility} {
		visibility: #{$visibility};
	}
	.hpver\@visibility-#{$visibility}:hover {
		visibility: #{$visibility};
	}
}

// ? FLEX GROW
@for $i from 0 through 12 {
	.flex-grow-#{$i} {
		flex-grow: #{$i};
	}
	.hover\@flex-grow-#{$i}:hover {
		flex-grow: #{$i};
	}
}

// ? FLEX SHRINK
@for $i from 0 through 12 {
	.flex-shrink-#{$i} {
		flex-shrink: #{$i};
	}
	.hover\@flex-shrink-#{$i}:hover {
		flex-shrink: #{$i};
	}
}

// ? BACKGROUND SIZE
@each $size, $size-value in ("auto": auto, "cover": cover, "contain": contain) {
	.bg-size-#{$size} {
		background-size: #{$size-value};
	}
	.hover\@bg-size-#{$size}:hover {
		background-size: #{$size-value};
	}
}

// ? BACKGROUND POSITION
@each $position,
	$position-value
		in (
			"tl": top left,
			"tc": top center,
			"tr": top right,
			"cl": center left,
			"cc": center center,
			"cr": center right,
			"bl": bottom left,
			"bc": bottom center,
			"br": bottom right
		)
{
	.bg-pos-#{$position} {
		background-position: #{$position-value};
	}
	.hover\@bg-pos-#{$position}:hover {
		background-position: #{$position-value};
	}
}

// ? BACKGROUND REPEAT
@each $repeat,
	$repeat-value
		in (
			"repeat": repeat,
			"no-repeat": no-repeat,
			"repeat-x": repeat-x,
			"repeat-y": repeat-y
		)
{
	.bg-#{$repeat} {
		background-repeat: #{$repeat-value};
	}
	.hover\@bg-#{$repeat}:hover {
		background-repeat: #{$repeat-value};
	}
}

// ? LIST STYLE
@each $style in (none, disc, circle, square, decimal) {
	.list-#{$style} {
		list-style: #{$style};
	}
	.hover\@list-#{$style}:hover {
		list-style: #{$style};
	}
}

// ? LIST STYLE POSITION
@each $position in ("outside", "inside") {
	.list-#{$position} {
		list-style-position: #{$position};
	}
	.hover\@list-#{$position}:hover {
		list-style-position: #{$position};
	}
}

// ? OBJECT FIT
@each $object in (fill, contain, cover, none, scale-down) {
	.obj-fit-#{$object} {
		object-fit: #{$object};
	}
	.hover\@obj-fit-#{$object}:hover {
		object-fit: #{$object};
	}
}

// ? OBJECT POSITION
@each $object in (top, bottom, left, right, center) {
	.obj-pos-#{$object} {
		object-position: #{$object};
	}
	.hover\@obj-pos-#{$object}:hover {
		object-position: #{$object};
	}
}

// ? LINE HEIGHT
@each $height,
	$height-value
		in (
			"compact": 1.1,
			"cozy": 1.3,
			"normal": 1.5,
			"spacious": 1.75,
			"expanded": 2
		)
{
	.line-#{$height} {
		height: #{$height-value};
	}
	.hover\@line-#{$height}:hover {
		height: #{$height-value};
	}
}

// ? LETTER SPACING
@each $spacing,
	$spacing-value
		in (
			"compact": -0.05em,
			"cozy": -0.025em,
			"normal": 0em,
			"spacious": 0.025em,
			"expanded": 0.05em
		)
{
	.letter-#{$spacing} {
		letter-spacing: #{$spacing-value};
	}
	.hover\@letter-#{$spacing}:hover {
		letter-spacing: #{$spacing-value};
	}
}

// ? ASPECT RATIO
@each $ratio,
	$ratio-value
		in (
			"square": (
				1,
				1,
			),
			"video": (
				16,
				9,
			),
			"portrait": (
				3,
				4,
			),
			"landscape": (
				4,
				3,
			),
			"widescreen": (
				21,
				9,
			),
			"golden": (
				1.618,
				1,
			)
		)
{
	.ratio-#{$ratio} {
		aspect-ratio: #{nth($ratio-value, 1)} / #{nth($ratio-value, 2)};
	}
	.hover\@ratio-#{$ratio}:hover {
		aspect-ratio: #{nth($ratio-value, 1)} / #{nth($ratio-value, 2)};
	}
}

// ? FILTERS
@each $filters,
	$filters-value
		in (
			"blur": (
				"blur-1": "blur(1px)",
				"blur-2": "blur(2px)",
				"blur-3": "blur(3px)",
				"blur-4": "blur(4px)",
				"blur-5": "blur(5px)",
			),
			"brightness": (
				"brightness-50": "brightness(50%)",
				"brightness-75": "brightness(75%)",
				"brightness-100": "brightness(100%)",
				"brightness-125": "brightness(125%)",
				"brightness-150": "brightness(150%)",
			),
			"contrast": (
				"contrast-50": "contrast(50%)",
				"contrast-75": "contrast(75%)",
				"contrast-100": "contrast(100%)",
				"contrast-125": "contrast(125%)",
				"contrast-150": "contrast(150%)",
			),
			"grayscale": (
				"grayscale-0": "grayscale(0%)",
				"grayscale-50": "grayscale(50%)",
				"grayscale-100": "grayscale(100%)",
			),
			"sepia": (
				"sepia-0": "sepia(0%)",
				"sepia-50": "sepia(50%)",
				"sepia-100": "sepia(100%)",
			)
		)
{
	@each $class-name, $value in $filters-value {
		.filters-#{$class-name} {
			filter: #{$value};
		}
		.hover\@filters-#{$class-name}:hover {
			filter: #{$value};
		}
	}
}

// ? MIX BLEND MODE
@each $blend in (multiply, screen, overlay, darken, lighten, normal) {
	.mix-blend-#{$blend} {
		mix-blend-mode: #{$blend};
	}
	.hover\@mix-blend-#{$blend}:hover {
		mix-blend-mode: #{$blend};
	}
}

// ? MIX BLEND MODE
@each $blend in (multiply, screen, overlay, darken, lighten, normal) {
	.bg-blend-#{$blend} {
		background-blend-mode: #{$blend};
	}
	.hover\@bg-blend-#{$blend}:hover {
		background-blend-mode: #{$blend};
	}
}
